-- DROP TABLE PUBLIC.GENRE;
-- DROP TABLE PUBLIC.RATING;
-- DROP TABLE PUBLIC.FILM;
-- DROP TABLE PUBLIC.USERS;
-- DROP TABLE PUBLIC.FILM_GENRE;
-- DROP TABLE PUBLIC.FILM_LIKES;
-- DROP TABLE PUBLIC.FRIENDS;

CREATE TABLE IF NOT EXISTS PUBLIC.GENRE (
	GENRE_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(100) NOT NULL,
	CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_ID)
);
CREATE IF NOT EXISTS  IF NOT EXISTS UNIQUE INDEX PRIMARY_KEY_4 ON PUBLIC.GENRE (GENRE_ID);


CREATE TABLE IF NOT EXISTS PUBLIC.RATING (
	RATING_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50) NOT NULL,
	CONSTRAINT RATING_PK PRIMARY KEY (RATING_ID)
);
CREATE IF NOT EXISTS UNIQUE INDEX PRIMARY_KEY_8 ON PUBLIC.RATING (RATING_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM (
	FILM_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(100) NOT NULL,
	DESCRIPTION CHARACTER VARYING(200),
	RELEASE_DATE DATE NOT NULL,
	DURATION INTEGER NOT NULL,
	RATING_ID INTEGER,
	CONSTRAINT FILM_FK PRIMARY KEY (RATING_ID,RATING_ID),
	CONSTRAINT FILM_PK PRIMARY KEY (FILM_ID)
);
CREATE IF NOT EXISTS INDEX FILM_FK_INDEX_2 ON PUBLIC.FILM (RATING_ID);
CREATE IF NOT EXISTS UNIQUE INDEX PRIMARY_KEY_2 ON PUBLIC.FILM (FILM_ID);

ALTER TABLE PUBLIC.FILM ADD CONSTRAINT FILM_FK FOREIGN KEY (RATING_ID) REFERENCES PUBLIC.RATING(RATING_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

CREATE TABLE IF NOT EXISTS PUBLIC.USERS (
	USER_ID INTEGER NOT NULL AUTO_INCREMENT,
	EMAIL CHARACTER VARYING(100) NOT NULL,
	LOGIN CHARACTER VARYING(100) NOT NULL,
	NAME CHARACTER VARYING(100) NOT NULL,
	BIRTHDAY DATE,
	CONSTRAINT USERS_PK PRIMARY KEY (USER_ID)
);
CREATE IF NOT EXISTS UNIQUE INDEX PRIMARY_KEY_4D ON PUBLIC.USERS (USER_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_GENRE (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	FILM_ID INTEGER NOT NULL,
	GENRE_ID INTEGER NOT NULL,
	CONSTRAINT FILM_GENRE_FILM_FK PRIMARY KEY (FILM_ID,FILM_ID),
	CONSTRAINT FILM_GENRE_GENRE_FK PRIMARY KEY (GENRE_ID,GENRE_ID),
	CONSTRAINT FILM_GENRE_PK PRIMARY KEY (ID)
);
CREATE IF NOT EXISTS INDEX FILM_GENRE_FILM_FK_INDEX_7 ON PUBLIC.FILM_GENRE (FILM_ID);
CREATE IF NOT EXISTS INDEX FILM_GENRE_GENRE_FK_INDEX_7 ON PUBLIC.FILM_GENRE (GENRE_ID);
CREATE IF NOT EXISTS UNIQUE INDEX PRIMARY_KEY_7 ON PUBLIC.FILM_GENRE (ID);

ALTER TABLE PUBLIC.FILM_GENRE ADD CONSTRAINT FILM_GENRE_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(FILM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE PUBLIC.FILM_GENRE ADD CONSTRAINT FILM_GENRE_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(GENRE_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;


CREATE TABLE IF NOT EXISTS PUBLIC.FILM_LIKES (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	FILM_ID INTEGER NOT NULL,
	USER_ID INTEGER NOT NULL,
	CONSTRAINT FILM_LIKES_FILM_FK PRIMARY KEY (FILM_ID,FILM_ID),
	CONSTRAINT FILM_LIKES_PK PRIMARY KEY (ID),
	CONSTRAINT FILM_LIKES_USER_FK PRIMARY KEY (USER_ID,USER_ID)
);
CREATE IF NOT EXISTS INDEX FILM_LIKES_FILM_FK_INDEX_7 ON PUBLIC.FILM_LIKES (FILM_ID);
CREATE IF NOT EXISTS INDEX FILM_LIKES_USER_FK_INDEX_7 ON PUBLIC.FILM_LIKES (USER_ID);
CREATE IF NOT EXISTS UNIQUE INDEX PRIMARY_KEY_7A ON PUBLIC.FILM_LIKES (ID);

ALTER TABLE PUBLIC.FILM_LIKES ADD CONSTRAINT FILM_LIKES_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(FILM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE PUBLIC.FILM_LIKES ADD CONSTRAINT FILM_LIKES_USER_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	REQUESTER_ID INTEGER NOT NULL,
	ACCEPTER_ID INTEGER NOT NULL,
	STATUS CHARACTER VARYING(50) NOT NULL,
	CONSTRAINT FRIENDS_FK_A PRIMARY KEY (ACCEPTER_ID),
	CONSTRAINT FRIENDS_FK_R PRIMARY KEY (REQUESTER_ID),
	CONSTRAINT FRIENDS_PK PRIMARY KEY (ID)
);
CREATE IF NOT EXISTS INDEX FRIENDS_FK_A_INDEX_7 ON PUBLIC.FRIENDS (ACCEPTER_ID);
CREATE IF NOT EXISTS INDEX FRIENDS_FK_R_INDEX_7 ON PUBLIC.FRIENDS (REQUESTER_ID);
CREATE IF NOT EXISTS UNIQUE INDEX PRIMARY_KEY_70 ON PUBLIC.FRIENDS (ID);

ALTER TABLE PUBLIC.FRIENDS ADD CONSTRAINT FRIENDS_FK_A FOREIGN KEY (ACCEPTER_ID) REFERENCES PUBLIC.USERS(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE PUBLIC.FRIENDS ADD CONSTRAINT FRIENDS_FK_R FOREIGN KEY (REQUESTER_ID) REFERENCES PUBLIC.USERS(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;